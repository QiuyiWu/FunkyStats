#comparisons
par(mfrow=c(1,3))
plot(comparisons$obs.rate.w,comparisons$post.rate.w)
abline(0,1,lty=2)
plot(comparisons$obs.rate.b,comparisons$post.rate.b)
abline(0,1,lty=2)
plot(comparisons$obs.rate.h,comparisons$post.rate.h)
abline(0,1,lty=2)
head(comparisons)
head(comparisons %>% filter(obs.rate.b==0))
head(comparisons %>% filter(obs.rate.b==0)) %>% arrange(desc(count.b))
head(comparisons %>% filter(obs.rate.b==0)) %>% arrange(desc(count.b)) %>% select(obs.rate.b,post.rate.b,count.b)
data.rates$officer_id_hash
quantile.mat$rowname
head(comparisons %>% filter(obs.rate.w==0)) %>% arrange(desc(count.w)) %>% select(obs.rate.w,post.rate.w,count.w)
# Chunk 1: setup
knitr::opts_chunk$set(echo = F,message = F,warning = F,dev = 'pdf',fig.pos = '!H',cache = T)
# Chunk 2
#rm(list=ls())
library(tidyverse)
library(janitor)
library(knitr)
library(kableExtra)
library(gridExtra)
# Chunk 3
fancy.summarize <- source("fancy_summarize.R")$value
d <- readRDS("austin.rds")
d <- d %>% mutate(vehicle_year = ifelse(vehicle_year<1960,1960,vehicle_year)) %>%
mutate(vehicle_year = ifelse(vehicle_year > 2017,NA, vehicle_year)) %>%
mutate(vehicle_make = fct_lump_n(vehicle_make,n = 25)) %>%
mutate(vehicle_model = fct_lump_n(vehicle_model,n = 250))
d.numeric.all <- d %>% select(subject_age,subject_sex,frisk_performed,
search_conducted, search_person,
search_vehicle)
d.numeric.search <- d %>% filter(search_conducted==T) %>%
select(contraband_found,contraband_drugs,contraband_weapons,frisk_performed)
d.cat <- d %>% select(subject_race,search_basis,reason_for_stop,
vehicle_make,vehicle_model,vehicle_registration_state,
vehicle_year)
summary.stats1 <- d.numeric.all %>% mutate_all(as.numeric) %>%
mutate(subject_sex = subject_sex - 1) %>%  #defaults to 1/2 coding
as.data.frame() %>%
fancy.summarize(.,nmis=T,uniq=T,latex = T)
summary.stats.tables <- apply(d.cat,2,tabyl)
# Chunk 4
summary.stats2 <- d.numeric.search %>%
mutate_all(as.numeric) %>%
as.data.frame() %>%
fancy.summarize(uniq=T,nmis=T, latex = T)
# Chunk 5
rr <- summary.stats.tables[[1]] %>% select(c(1,2,4))
names(rr) <- c("Race","n","percent")
kable(rr, caption = "Subject race.") %>%
kable_styling(position = "center")
rr <- summary.stats.tables[[2]] %>% select(c(1,2,4))
names(rr) <- c("Search basis","n","percent")
kable(rr,caption ="Search basis.") %>%
kable_styling(position = "center")
# Chunk 6
officer.counts <- d %>% group_by(officer_id_hash) %>% summarise(`Number of stops per officer` = n())
vioplot::vioplot(x = officer.counts$`Number of stops per officer`,xlab = "Officers", ylab="Number of Stops")
# Chunk 7
d2 <- d %>% filter(subject_race %in% c("white","black","hispanic")) %>%
mutate(subject_race = fct_lump_min(subject_race,20000))
searches.all <- d2 %>% filter(frisk_performed==T) %>%
tabyl(officer_id_hash)
#quantile(searches.all$n,seq(0,1,.1))
ids.to.keep <- searches.all %>% filter(n>18) %>% pull(officer_id_hash)
searches <- d2 %>% filter(officer_id_hash %in% ids.to.keep) %>%
filter(subject_race %in% c("black","hispanic","white")) %>%
mutate(subject_race = relevel(subject_race,ref="white")) %>%
mutate(subject_race = fct_drop(subject_race)) %>%
filter(frisk_performed==T) %>%
mutate(hit = (contraband_found | contraband_drugs | contraband_weapons)) %>%
select(officer_id_hash, contains("subject_"),
reason_for_stop,frisk_performed,search_conducted,hit,contains("contraband"))
# Chunk 8
hit_rates <- searches %>%
group_by(officer_id_hash,subject_race) %>%
summarise(
hit_rate = mean(contraband_found, na.rm = T)
)
hit_rates <- hit_rates %>%
filter(subject_race %in% c("black", "white", "hispanic")) %>%
spread(subject_race, hit_rate, fill = 0) %>%
rename(white_hit_rate = white) %>%
gather(minority_race, minority_hit_rate, c(black, hispanic)) %>%
arrange(officer_id_hash)
# We'll use this just to make our axes' limits nice and even
max_hit_rate <- hit_rates %>% ungroup %>%
select(ends_with("hit_rate")) %>%
max()
hit_rates %>%
ggplot(aes(
x = white_hit_rate,
y = minority_hit_rate
)) +
geom_point() +
# This sets a diagonal reference line (line of equal hit rates)
geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
# These next few lines just make the axes pretty and even
scale_x_continuous("White hit rate",
limits = c(0, max_hit_rate + 0.01),
labels = scales::percent
) +
scale_y_continuous("Minority hit rate",
limits = c(0, max_hit_rate + 0.01),
labels = scales::percent
) +
# This makes sure that 1% on the x-axis is the same as 1% on the y-axis
coord_fixed() +
# This allows us to compare black v. white and Hispanic v. white side by
# side, in panels
facet_grid(. ~ minority_race)
# Depending on your version of ggplot2, you may be able to use the syntax
# below (the newer ggplot2 syntax)---which is clearer, in my opinion.
# But older versions of ggplot2 will only accept the above syntax
# facet_grid(cols = vars(minority_race))
# Chunk 9
hit_rates_binary <- searches %>%
filter(subject_race %in% c("black","hispanic","white")) %>%
mutate(subject_race = fct_drop(subject_race)) %>%
mutate(subject_race = relevel(subject_race,ref="white")) %>%
group_by(officer_id_hash,subject_race) %>%
summarise(
hit_rate = mean(contraband_found, na.rm = T),
nsearches = n(),
nhits = sum(contraband_found,na.rm=T)
)
# Chunk 10
library(rstanarm)
summary_stats <- function(posterior) {
x <- invlogit(posterior)  # log-odds -> probabilities
t(apply(x, 2, quantile, probs = c(0.025, 0.5, 0.975)))
}
shift_draws <- function(draws) {
sweep(draws[, -1], MARGIN = 1, STATS = draws[, 1], FUN = "+")
}
SEED <- 101
wi_prior <- normal(-1.3, 1) #the overall hit rate is .298; log(.298) ~ -1.21
stanfit.w <- stan_glmer(cbind(nhits, nsearches-nhits) ~ (1|officer_id_hash),
data = hit_rates_binary %>% filter(subject_race=="white"),
family = binomial("logit"),
prior_intercept = wi_prior, seed = SEED,adapt_delta = .99)
stanfit.b <- stan_glmer(cbind(nhits, nsearches-nhits) ~ 1 +(1|officer_id_hash),
data = hit_rates_binary %>% filter(subject_race=="black"),
family = binomial("logit"),
prior_intercept = wi_prior, seed = SEED,adapt_delta = .99)
stanfit.h <- stan_glmer(cbind(nhits, nsearches-nhits) ~ 1 +(1|officer_id_hash),
data = hit_rates_binary %>% filter(subject_race=="hispanic"),
family = binomial("logit"),
prior_intercept = wi_prior, seed = SEED,adapt_delta = .99)
#stanfit1 <- readRDS("stanfit1.rds")
alphas.w <- shift_draws(as.matrix(stanfit.w))
post.w <- summary_stats(alphas.w)
N <- nrow(post.w)
post.w <- post.w[-N,]
alphas.b <- shift_draws(as.matrix(stanfit.b))
post.b <- summary_stats(alphas.b)
N <- nrow(post.b)
post.b <- post.b[-N,]
alphas.h <- shift_draws(as.matrix(stanfit.h))
post.h <- summary_stats(alphas.h)
N <- nrow(post.h)
post.h <- post.h[-N,]
dim(post.w)
post.w <- as.data.frame(post.w) %>% rownames_to_column()
post.b <- as.data.frame(post.b) %>% rownames_to_column()
post.h <- as.data.frame(post.h) %>% rownames_to_column()
dim(post.b)
dim(post.w)
dim(post.h)
saveRDS(post.w,"post.w.rds")
saveRDS(post.b,"post.b.rds")
saveRDS(post.h,"post.h.rds")
A <- post.w %>% head %>% select(2:4) %>% round(3)
B <- post.b %>% head%>% select(2:4) %>% round(3)
C <- post.h %>% head%>% select(2:4) %>% round(3)
rownames(A) = NULL
rownames(B) = NULL
rownames(C) = NULL
list(ids.to.keep[1:5],A,B,C) %>% kable(caption="Posterior intervals for three races. From left to right: white, Black, Hispanic")
data.rates <- searches %>% group_by(subject_race,officer_id_hash) %>%
summarise(hit_rate=mean(hit,na.rm=T)) %>%
pivot_wider(id_cols=officer_id_hash,
names_from=subject_race, values_from=hit_rate)
search.counts <- searches %>% group_by(officer_id_hash,subject_race) %>%
summarise(count=n()) %>%
pivot_wider(id_cols=officer_id_hash,
names_from=subject_race, values_from=count)
comparisons <- cbind(data.rates,quantile.mat %>% select(contains("50%")),
search.counts[,2:4])
names(comparisons) <- c("officer_id_hash","obs.rate.w","obs.rate.b","obs.rate.h",
"post.rate.w","post.rate.b","post.rate.h",
"count.w","count.b","count.h")
#comparisons
par(mfrow=c(1,3))
plot(comparisons$obs.rate.w,comparisons$post.rate.w)
abline(0,1,lty=2)
plot(comparisons$obs.rate.b,comparisons$post.rate.b)
abline(0,1,lty=2)
plot(comparisons$obs.rate.h,comparisons$post.rate.h)
abline(0,1,lty=2)
data.rates <- searches %>% group_by(subject_race,officer_id_hash) %>%
summarise(hit_rate=mean(hit,na.rm=T)) %>%
pivot_wider(id_cols=officer_id_hash,
names_from=subject_race, values_from=hit_rate)
search.counts <- searches %>% group_by(officer_id_hash,subject_race) %>%
summarise(count=n()) %>%
pivot_wider(id_cols=officer_id_hash,
names_from=subject_race, values_from=count)
quantile.mat <- full_join(post.w,post.b,by="rowname",suffix = c(".w",".b")) %>% full_join(.,post.h,by="rowname",suffix=c(".b",".h"))
comparisons <- cbind(data.rates,quantile.mat %>% select(contains("50%")),
search.counts[,2:4])
names(comparisons) <- c("officer_id_hash","obs.rate.w","obs.rate.b","obs.rate.h",
"post.rate.w","post.rate.b","post.rate.h",
"count.w","count.b","count.h")
#comparisons
par(mfrow=c(1,3))
plot(comparisons$obs.rate.w,comparisons$post.rate.w)
abline(0,1,lty=2)
plot(comparisons$obs.rate.b,comparisons$post.rate.b)
abline(0,1,lty=2)
plot(comparisons$obs.rate.h,comparisons$post.rate.h)
abline(0,1,lty=2)
head(comparisons %>% filter(obs.rate.w==0)) %>% arrange(desc(count.w)) %>% select(obs.rate.w,post.rate.w,count.w)
dim(data.rates)
dim(search.counts)
dim(quantile.mat)
comparisons <- cbind(data.rates,quantile.mat %>% select(contains("50%")),
search.counts[,2:4])
comparisons
head(comparisons %>% filter(obs.rate.w==0)) %>% arrange(desc(count.w)) %>% select(obs.rate.w,post.rate.w,count.w)
head(comparisons %>% filter(obs.rate.w==0)) %>% arrange(desc(count.w)) %>% select(obs.rate.w,post.rate.w,count.w)
names(comparisons) <- c("officer_id_hash","obs.rate.w","obs.rate.b","obs.rate.h",
"post.rate.w","post.rate.b","post.rate.h",
"count.w","count.b","count.h")
head(comparisons %>% filter(obs.rate.w==0)) %>% arrange(desc(count.w)) %>% select(obs.rate.w,post.rate.w,count.w)
head(comparisons %>% filter(obs.rate.w==.5)) %>% arrange(desc(count.w)) %>% select(obs.rate.w,post.rate.w,count.w)
head(comparisons %>% filter(post.w<=.1)) %>% arrange(desc(count.w)) %>% select(obs.rate.w,post.rate.w,count.w)
head(comparisons %>% filter(post.w<.1)) %>% arrange(desc(count.w)) %>% select(obs.rate.w,post.rate.w,count.w)
head(comparisons %>% filter(post.w<.1)) %>% arrange(desc(count.w)) %>% select(obs.rate.w,post.rate.w,count.w)
head(comparisons %>% filter(post.rate.w<.1)) %>% arrange(desc(count.w)) %>% select(obs.rate.w,post.rate.w,count.w)
ids.to.keep <- stanfit.h$data$officer_id_hash
output = rep(0,nrow(comparisons))
median.mat <- quantile.mat %>% select(contains("50%")) %>% as.matrix()
for (ii in 1:130){
temp = mean(median.mat[ii,],na.rm=T)
ssr = sum((median.mat[ii,] - temp)^2, na.rm = T)
output[ii] = ssr
}
fairness.df <- data.frame(ID = ids.to.keep, score = output)
fairness.df %>% ggplot(aes(x=score)) + geom_histogram(bins=100)
dim(quantile.mat)
dim(comparisons)
ids.to.keep <- stanfit.h$data$officer_id_hash
output = rep(0,nrow(comparisons))
median.mat <- quantile.mat %>% select(contains("50%")) %>% as.matrix()
for (ii in 1:nrow(comparisons)){
temp = mean(median.mat[ii,],na.rm=T)
ssr = sum((median.mat[ii,] - temp)^2, na.rm = T)
output[ii] = ssr
}
fairness.df <- data.frame(ID = ids.to.keep, score = output)
fairness.df %>% ggplot(aes(x=score)) + geom_histogram(bins=100)
fairness.df$score
ex5 <- fairness.df %>% arrange(desc(score)) %>% pull(ID)
ex5 <- ex5[1:5]
comparisons %>% filter(officer_id_hash %in% ex5)
plot(stanfit.b)
dim(median.mat)
quantile.mat %>% select(contains("50%"))
ii=20
temp = mean(median.mat[ii,],na.rm=T)
temp
median.mat[20,]
median.mat[20,] - temp
for (ii in 1:nrow(comparisons)){
temp = mean(median.mat[ii,],na.rm=T)
ssr = sum((median.mat[ii,] - temp)^2, na.rm = F)
output[ii] = ssr
}
output
for (ii in 1:nrow(comparisons)){
temp = mean(median.mat[ii,],na.rm=F)
ssr = sum((median.mat[ii,] - temp)^2, na.rm = F)
output[ii] = ssr
}
output
fairness.df <- data.frame(ID = ids.to.keep, score = output)
fairness.df %>% ggplot(aes(x=score)) + geom_histogram(bins=100)
ids.to.keep <- stanfit.h$data$officer_id_hash
output = rep(0,nrow(comparisons))
median.mat <- quantile.mat %>% select(contains("50%")) %>% as.matrix()
for (ii in 1:nrow(comparisons)){
temp = mean(median.mat[ii,],na.rm=F)
ssr = sum((median.mat[ii,] - temp)^2, na.rm = F)
output[ii] = ssr
}
fairness.df <- data.frame(ID = ids.to.keep, score = output)
fairness.df %>% ggplot(aes(x=score)) + geom_histogram(bins=100)
```{r}
ex5 <- fairness.df %>% arrange(desc(score)) %>% pull(ID)
ex5 <- ex5[1:5]
comparisons %>% filter(officer_id_hash %in% ex5)
median.mat %>% head
which(ids.to.keep=="306d104854")
median.mat[24,]
quantile.mat %>% head
head(post.w)
quantile.mat[20,1]
quantile.mat[20,1] %>% length
quantile.mat[20,1] %>% nchar
q.id <- quantile.mat[,1] %>% str_sub(start = 30, end = 40)
q.id
q.id <- quantile.mat[,1] %>% str_sub(start = 31, end = 40)
q.id\
q.id
quantile.mat <- full_join(post.w,post.b,by="rowname",suffix = c(".w",".b")) %>% full_join(.,post.h,by="rowname",suffix=c(".b",".h"))
q.id <- quantile.mat[,1] %>% str_sub(start = 31, end = 40)
quantile.mat$ID = q.id
quantile.mat$officer_id_hash = q.id
quantile.mat <- full_join(post.w,post.b,by="rowname",suffix = c(".w",".b")) %>% full_join(.,post.h,by="rowname",suffix=c(".b",".h"))
q.id <- quantile.mat[,1] %>% str_sub(start = 31, end = 40)
quantile.mat$officer_id_hash = q.id
comparisons <- full_join(data.rates,quantile.mat %>% select(contains("50%"), by = "officer_id_hash")) %>%
full_join(.,search.counts, by = "officer_id_hash")
comparisons <- full_join(data.rates,quantile.mat %>% select(contains("50%"), by = "officer_id_hash")) %>%
full_join(.,search.counts, by = "officer_id_hash")
full_join(data.rates,quantile.mat %>% select(contains("50%"), by = "officer_id_hash"))
comparisons <- full_join(data.rates,quantile.mat %>% select(officer_id_hash,contains("50%"), by = "officer_id_hash")) %>%
full_join(.,search.counts, by = "officer_id_hash")
full_join(data.rates,quantile.mat %>% select(officer_id_hash,contains("50%"), by = "officer_id_hash"))
comparisons <- full_join(data.rates,quantile.mat %>% select(officer_id_hash,contains("50%")), by = "officer_id_hash") %>%
full_join(.,search.counts, by = "officer_id_hash")
comparisons
names(comparisons) <- c("officer_id_hash","obs.rate.w","obs.rate.b","obs.rate.h",
"post.rate.w","post.rate.b","post.rate.h",
"count.w","count.b","count.h")
comparisons %>% head
plot(comparisons$obs.rate.w,comparisons$post.rate.w)
plot(comparisons$obs.rate.b,comparisons$post.rate.b)
plot(comparisons$obs.rate.h,comparisons$post.rate.h)
#ids.to.keep <- stanfit.h$data$officer_id_hash
output = rep(0,nrow(comparisons))
median.mat <- quantile.mat %>% select(contains("50%")) %>% as.matrix()
for (ii in 1:nrow(comparisons)){
temp = mean(median.mat[ii,],na.rm=F)
ssr = sum((median.mat[ii,] - temp)^2, na.rm = F)
output[ii] = ssr
}
fairness.df <- data.frame(ID = ids.to.keep, score = output)
fairness.df %>% ggplot(aes(x=score)) + geom_histogram(bins=100)
ex5 <- fairness.df %>% arrange(desc(score)) %>% pull(ID)
ex5 <- ex5[1:5]
comparisons %>% filter(officer_id_hash %in% ex5)
#ids.to.keep <- stanfit.h$data$officer_id_hash
output = rep(0,nrow(comparisons))
median.mat <- quantile.mat %>% select(contains("50%")) %>% as.matrix()
for (ii in 1:nrow(comparisons)){
temp = mean(comparisons[ii,"post.rate.w":"post.rate.h"],na.rm=F)
ssr = sum((comparisons[ii,"post.rate.w":"post.rate.h"] - temp)^2, na.rm = F)
output[ii] = ssr
}
for (ii in 1:nrow(comparisons)){
temp = mean(comparisons[ii,"post.rate.w":"post.rate.h"],na.rm=T)
ssr = sum((comparisons[ii,"post.rate.w":"post.rate.h"] - temp)^2, na.rm = F)
output[ii] = ssr
}
for (ii in 1:nrow(comparisons)){
temp = mean(comparisons[ii,"post.rate.w":"post.rate.h"],na.rm=T)
ssr = sum((comparisons[ii,"post.rate.w":"post.rate.h"] - temp)^2, na.rm = T)
output[ii] = ssr
}
comparisons[ii,"post.rate.w":"post.rate.h"]
comparisons[ii,c("post.rate.w":"post.rate.h")]
comparisons %>% head
current.row <- comparisons[ii,c(post.rate.w:post.rate.h)]
for (ii in 1:nrow(comparisons)){
current.row <- comparisons[ii,5:7]
temp = mean(current.row,na.rm=T)
ssr = sum((current.row - temp)^2, na.rm = T)
output[ii] = ssr
}
warnings()
current.row <- comparisons[ii,5:7]
current.row
ii
ii=20
current.row <- comparisons[ii,5:7]
current.row
temp = mean(current.row,na.rm=T)
temp = rowMeans(current.row,na.rm=T)
temp
ssr = sum((current.row - temp)^2, na.rm = T)
output[ii] = ssr
#ids.to.keep <- stanfit.h$data$officer_id_hash
output = rep(0,nrow(comparisons))
median.mat <- quantile.mat %>% select(contains("50%")) %>% as.matrix()
for (ii in 1:nrow(comparisons)){
current.row <- comparisons[ii,5:7]
temp = rowMeans(current.row,na.rm=T)
ssr = sum((current.row - temp)^2, na.rm = T)
output[ii] = ssr
}
fairness.df <- data.frame(ID = ids.to.keep, score = output)
fairness.df %>% ggplot(aes(x=score)) + geom_histogram(bins=100)
ex5 <- fairness.df %>% arrange(desc(score)) %>% pull(ID)
ex5 <- ex5[1:5]
comparisons %>% filter(officer_id_hash %in% ex5)
fairness.df <- data.frame(ID = comparisons$officer_id_hash, score = output)
fairness.df %>% ggplot(aes(x=score)) + geom_histogram(bins=100)
#ids.to.keep <- stanfit.h$data$officer_id_hash
output = rep(0,nrow(comparisons))
median.mat <- quantile.mat %>% select(contains("50%")) %>% as.matrix()
for (ii in 1:nrow(comparisons)){
current.row <- comparisons[ii,5:7]
temp = rowMeans(current.row,na.rm=T)
ssr = sum((current.row - temp)^2, na.rm = T)
output[ii] = ssr
}
fairness.df <- data.frame(ID = comparisons$officer_id_hash, score = output)
fairness.df %>% ggplot(aes(x=score)) + geom_histogram(bins=100)
```{r}
ex5 <- fairness.df %>% arrange(desc(score)) %>% pull(ID)
ex5 <- ex5[1:5]
comparisons %>% filter(officer_id_hash %in% ex5)
ex.scores <- fairness.df %>% slice(ex5) %>% pull(score)
comparisons <- full_join(data.rates,quantile.mat %>% select(officer_id_hash,contains("50%")), by = "officer_id_hash") %>%
full_join(.,search.counts, by = "officer_id_hash")
names(comparisons) <- c("ID","obs.w","obs.b","obs.h",
"post.w","post.b","post.h",
"count.w","count.b","count.h")
#comparisons
par(mfrow=c(1,3))
plot(comparisons$obs.w,comparisons$post.w)
abline(0,1,lty=2)
plot(comparisons$obs.b,comparisons$post.b)
abline(0,1,lty=2)
plot(comparisons$obs.h,comparisons$post.h)
#ids.to.keep <- stanfit.h$data$officer_id_hash
output = rep(0,nrow(comparisons))
median.mat <- quantile.mat %>% select(contains("50%")) %>% as.matrix()
for (ii in 1:nrow(comparisons)){
current.row <- comparisons[ii,5:7]
temp = rowMeans(current.row,na.rm=T)
ssr = sum((current.row - temp)^2, na.rm = T)
output[ii] = ssr
}
fairness.df <- data.frame(ID = comparisons$officer_id_hash, score = output)
fairness.df <- data.frame(ID = comparisons$ID, score = output)
fairness.df %>% ggplot(aes(x=score)) + geom_histogram(bins=100)
ex5 <- fairness.df %>% arrange(desc(score)) %>% pull(ID)
ex5 <- ex5[1:5]
comparisons %>% filter(officer_id_hash %in% ex5) %>% kable(caption="Highest 5 scores.")
comparisons %>% filter(ID %in% ex5) %>% mutate_if(is.numeric,round,4) %>% kable(caption="Highest 5 scores. ")
comparisons %>% filter(ID %in% ex5) %>% mutate_if(is.numeric,round,3) %>% kable(caption="Highest 5 scores. ")
plot(comparisons$obs.w,comparisons$post.w, main = "Medians - white ", xlab = "Observed rate", ylab="Posterior Median")
abline(0,1,lty=2)
plot(comparisons$obs.b,comparisons$post.b, main = "Medians - Black ", xlab = "Observed rate", ylab="Posterior Median")
abline(0,1,lty=2)
plot(comparisons$obs.h,comparisons$post.h, main = "Medians - Hispanic ", xlab = "Observed rate", ylab="Posterior Median")
plot(comparisons$obs.w,comparisons$post.w, main = "Post. Medians - white ", xlab = "Observed rate", ylab="Posterior Median")
abline(0,1,lty=2)
plot(comparisons$obs.b,comparisons$post.b, main = "Post. Medians - Black ", xlab = "Observed rate", ylab="Posterior Median")
abline(0,1,lty=2)
plot(comparisons$obs.h,comparisons$post.h, main = "Post. Medians - Hispanic ", xlab = "Observed rate", ylab="Posterior Median")
vioplot::vioplot(x = officer.counts$`Number of stops per officer`,xlab = "Officers", ylab="Number of Stops")
?vioplot::vioplot
rp <- read.csv("../RacialProfiling/combined_data_Migrated Data.csv")
names(rp)
rp <- read.csv("../RacialProfiling/combined_data_Migrated Data.csv") %>%
select(Date,Person.Search.YN,Race,RACE_KNOWN,Search.Found,SEX,Time,ZIP)
head(rp)
unlink('Report_cache', recursive = TRUE)
library(broom)
austin.dat = d
library(broom)
austin.dat1 = austin.dat %>% select(date, subject_age, subject_race, subject_sex, frisk_performed)#, search_conducted, contraband_found,
austin.dat1$frisk_performed = as.factor(austin.dat1$frisk_performed)
austin.dat1$year = substr(austin.dat1$date, 1,4)
austin.dat1$year = as.numeric(austin.dat1$year)
#austin.dat1 = austin.dat1[austin.dat1$subject_race != "unknow", ]
austin.dat1 = na.omit(austin.dat1)
mod.1 = glm(frisk_performed ~ subject_race + subject_age + subject_sex, data = austin.dat1, family = binomial())
tidy(mod.1)
tidy(mod.1) %>% kable
tidy(mod.1) %>% kable(caption = "Logistic model for frisk rate vs. race, age, and sex") %>%
kable_styling(position="center")
tidy(mod.1) %>% round(4) %>% kable(caption = "Logistic model for frisk rate vs. race, age, and sex") %>%
kable_styling(position="center")
?tidy
tidy(mod.4)  %>% kable(caption = "Logistic model for contraband found vs.  race") %>%
kable_styling(position="center")
mod.4 = glm(as.factor(contraband_found) ~ subject_race, data = austin.dat2[austin.dat2$search_conducted == T,], family = binomial())
austin.dat2 = austin.dat %>% select(date, subject_age, subject_race, subject_sex, search_conducted, contraband_found,
contraband_drugs, contraband_weapons)
austin.dat2$search_conducted = as.factor(austin.dat2$search_conducted)
austin.dat2$contraband_found = as.factor(austin.dat2$contraband_found)
austin.dat2$contraband_others = ifelse(austin.dat2$contraband_weapons == F & austin.dat2$contraband_drugs == F & austin.dat2$contraband_found == T,T,F)
mod.4 = glm(as.factor(contraband_found) ~ subject_race, data = austin.dat2[austin.dat2$search_conducted == T,], family = binomial())
tidy(mod.4)  %>% kable(caption = "Logistic model for contraband found vs.  race") %>%
kable_styling(position="center")
tidy(mod.1)
tidy(mod.1) %>% mutate_if(is.numeric,round,3)
unlink('Report_cache', recursive = TRUE)
officer.counts %>% ggplot(aes(x = `Number of stops per officer`)) + geom_histogram(bins=100)
officer.counts %>% ggplot(aes(x = `Number of stops per officer`)) + geom_histogram(bins=120)
boxplot(officer.counts$`Number of stops per officer`)
boxplot(officer.counts$`Number of stops per officer`)
boxplot(officer.counts$`Number of stops per officer`)
unlink('Report_cache', recursive = TRUE)
